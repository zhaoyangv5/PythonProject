"""
TextFSM解析模板的编写主要分为两大部分，四个主要概念组成：

定义要提取字段的Value：包含字段名称，字段约束（比如不能为空，全局唯一等），字段所要满足的正则表达式。
驱动解析的一个或者多个状态State定义：包含解析状态State的定义、每个State中解析规则Rule的定义、每个解析规则Rule中对应动作Action的定义。
Action中又有LineAction、RecordAction、StateAction，分别负责继续当前行还是读取下一行文本、记录、状态转移。
两部分在书写的时候一定要有一个空白行。两部分总共涉及到Value、State、Rule、Action四个概念。

TextFSM的运转机制是大体而言如下：

逐行读取配置文本，然后以Start状态开始，每个状态内置了众多规则Rule。
如果当前行文本匹配到了Rule，且Rule中有要提取的信息Value，则将信息提取，如果发现了Record动作的指令，则将识别的所有字段打包成一条记录record，并追加到待返回的数据列表中。
在Rule中如果指定了状态转移的Actio则进行状态转移。读到文末的时候，TextFSM会自动进入隐藏的EOF状态，从而让有限状态自动机结束运行，返回所有识别的结果。

我们也可以制定很多的状态实现不同种类的识别。在实际使用中很多解析模板，我们编写一个Start状态即可，
为了节省资源或者一些特殊情况下，我们可能会编写多个状态，用到状态转移（Action部分我们会详细展开）


"""